/****** Data Cleaning  ******/
SELECT *
  FROM [Data Cleaning].dbo.NashvilleHousing

----------------------------------------------------------------------------------------------------------

---- Standardize the Date format

SELECT SaleDate, CONVERT (Date, SaleDate)
  FROM [Data Cleaning].dbo.NashvilleHousing


ALTER TABLE NashvilleHousing
ADD SaleDateConverted Date;

UPDATE NashvilleHousing
SET SaleDateConverted = CONVERT (Date, SaleDate)

--SELECT SaleDateConverted
 -- FROM [Data Cleaning].dbo.NashvilleHousing



sp_rename 'NashvilleHousing.SaleDateConverted', 'SaleDate', 'COLUMN';

----------------------------------------------------------------------------------------------------------


----- Populating the Null Addresses

SELECT a.ParcelID,  a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM [Data Cleaning].dbo.NashvilleHousing a
JOIN [Data Cleaning].dbo.NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM [Data Cleaning].dbo.NashvilleHousing a
JOIN [Data Cleaning].dbo.NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

----------------------------------------------------------------------------------------------------------


--- Breaking out PropertyAddress into Individual Columns (Address, City)

SELECT SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Ad,
SUBSTRING(PropertyAddress,CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress) ) as Ad
FROM [Data Cleaning].dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE NashvilleHousing
ADD PropertyCity Nvarchar(255);

UPDATE NashvilleHousing
SET PropertyCity = SUBSTRING(PropertyAddress,CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress) )


-------------------------------------------------------------------------------------------------------
--- Breaking out OwnerAddress into Individual Columns (Address, City, State)

Select 
PARSENAME(REPLACE(OwnerAddress, ',', '.'),3),
PARSENAME(REPLACE(OwnerAddress, ',', '.'),2),
PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)
from [Data Cleaning].dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'),3)

ALTER TABLE NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'),2)

ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)


-------------------------------------------------------------------------------------------
---Change Y and N to Yes and No

Select Distinct(SoldAsVacant), COUNT ((SoldAsVacant))
From [Data Cleaning].dbo.NashvilleHousing
Group by SoldAsVacant
order by 2

Select SoldAsVacant,
CASE when SoldAsVacant = 'Y' THEN 'Yes'
     when SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END
From [Data Cleaning].dbo.NashvilleHousing

UPDATE NashvilleHousing
SET SoldAsVacant = CASE when SoldAsVacant = 'Y' THEN 'Yes'
     when SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END

--------------------------------------------------------------------------------------
--- Remove Duplicates

WITH RowNumCTE AS (

Select *,
  ROW_NUMBER() over (
  PARTITION BY ParcelID,
               PropertySplitAddress,
			   SalePrice,
			   SaleDate,
			   LegalReference
			   ORDER BY
			       UniqueID) AS Row_Num
From [Data Cleaning].dbo.NashvilleHousing


)

DELETE FROM RowNumCTE
where row_num >1

-------------------------------------------------------------
---Delete Unused Columns

ALTER TABLE NashvilleHousing
DROP COLUMN SaleDate

ALTER TABLE NashvilleHousing
DROP COLUMN PropertyAddress

ALTER TABLE NashvilleHousing
DROP COLUMN OwnerAddress
